{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a href="javascript:void(0)" id="brokenBtn" class="btn btn-outline-secondary">Test Broker</a>
                <a href="javascript:void(0)" id="authBtn" class="btn btn-outline-secondary">Test Auth</a>
                <a href="javascript:void(0)" id="loggerBtn" class="btn btn-outline-secondary">Test Logger</a>
                <a href="javascript:void(0)" id="loggerViaRabbitBtn" class="btn btn-outline-secondary">Test Logger (RabbitMQ)</a>
                <a href="javascript:void(0)" id="loggerViaRPCBtn" class="btn btn-outline-secondary">Test Logger (RPC)</a>
                <a href="javascript:void(0)" id="mailerBtn" class="btn btn-outline-secondary">Test Mailer</a>
                <a href="javascript:void(0)" id="logViaGRPCBtn" class="btn btn-outline-secondary">Test gRPC log</a>

                <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
    let brokerBtn = document.querySelector("#brokenBtn");
    let authBtn = document.querySelector("#authBtn");
    let loggerBtn = document.querySelector("#loggerBtn");
    let loggerViaRabbitBtn = document.querySelector("#loggerViaRabbitBtn");
    let loggerViaRPCBtn = document.querySelector("#loggerViaRPCBtn");
    let mailerBtn = document.querySelector("#mailerBtn");
    let logViaGRPCBtn = document.querySelector("#logViaGRPCBtn");
    let output = document.querySelector("#output");
    let sent = document.querySelector("#payload");
    let received = document.querySelector("#received");
    
    brokerBtn.addEventListener("click", async () => {
        const body = {
            method: 'POST',
        };

        try {
            const response = await fetch("http:\/\/localhost:8080", body);
            let data = await response.json();
            sent.innerHTML = "empty post request";
            received.innerHTML = JSON.stringify(data, undefined, 4);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${data.message}`;
        } catch(e) {
            console.error(e);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${e.message}`;
        }
        

    });

    authBtn.addEventListener("click", async () => {
        const payload = {
            action: "auth",
            auth: {
                email: "admin@example.com",
                password: "verysecret",
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(payload),
            headers
        };

        try {
            const response = await fetch("http:\/\/localhost:8080/handle", body);
            let data = await response.json();
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${data.message}`;
        } catch(e) {
            console.error(e);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${e.message}`;
        }
    });

    loggerBtn.addEventListener("click", async () => {
        const payload = {
            action: "log",
            log: {
                name: "Logging using REST",
                data: "logging",
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(payload),
            headers
        };

        try {
            const response = await fetch("http:\/\/localhost:8080/handle", body);
            let data = await response.json();
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${data.message}`;
        } catch(e) {
            console.error(e);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${e.message}`;
        }
    });

    loggerViaRabbitBtn.addEventListener("click", async () => {
        const payload = {
            action: "logViaRabbit",
            log: {
                name: "Logging via RabbitMQ",
                data: "logging",
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(payload),
            headers
        };

        try {
            const response = await fetch("http:\/\/localhost:8080/handle", body);
            let data = await response.json();
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${data.message}`;
        } catch(e) {
            console.error(e);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${e.message}`;
        }
    });

    loggerViaRPCBtn.addEventListener("click", async () => {
        const payload = {
            action: "logViaRPC",
            log: {
                name: "Logging via RPC",
                data: "logging",
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(payload),
            headers
        };

        try {
            const response = await fetch("http:\/\/localhost:8080/handle", body);
            let data = await response.json();
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${data.message}`;
        } catch(e) {
            console.error(e);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${e.message}`;
        }
    });

    mailerBtn.addEventListener("click", async () => {
        const payload = {
            action: "mail",
            mail: {
                from: "me@example.com",
                to: "you@there.com",
                subject: "Test email",
                message: "Hello world!"                
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(payload),
            headers
        };

        try {
            const response = await fetch("http:\/\/localhost:8080/handle", body);
            let data = await response.json();
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${data.message}`;
        } catch(e) {
            console.error(e);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${e.message}`;
        }
    });


    logViaGRPCBtn.addEventListener("click", async () => {
        const payload = {
            action: "log",
            log: {
                name: "Logging via gRPC",
                data: "logging",
            }
        }

        const headers = new Headers();
        headers.append("Content-Type", "application/json");

        const body = {
            method: 'POST',
            body: JSON.stringify(payload),
            headers
        };

        try {
            const response = await fetch("http:\/\/localhost:8080/log-grpc", body);
            let data = await response.json();
            sent.innerHTML = JSON.stringify(payload, undefined, 4);
            received.innerHTML = JSON.stringify(data, undefined, 4);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${data.message}`;
        } catch(e) {
            console.error(e);
            output.innerHTML = `<br><strong>Response from broker service</strong>: ${e.message}`;
        }
    });
    </script>
{{end}}
